<?xml version="1.0" encoding="UTF-8"?>
<!-- ================================= 
    Notes: 
    
    * This build file includes targets to download and install in your local project the Apache IVY jar
    * IVY is used to manage dependencies on projects (e.g., jaxb libraries, jackson libraries for json, etc.) 
    * 
       TO USE IVY IN YOUR PROJECTS IN ORDER TO GET MANAGE DEPENDENCIES, MAKE SURE THE FOLLOWING LINES ARE
       IN YOUR BUILD.XML UNTILL 'IVY-END-LINE'
       
       # The target "download-ivy" and "install-ivy" will download the ivy jar and place it in the "ivy" folder
       # 
-->
<project name="Concurrency2015" default="start" basedir=".">
	<!-- PART 1: General properties definitions -->
	<property name="build.dir" value="build" />
	<property name="src.dir" value="src" />

	<!-- PART 2: compilation and execution targets for this session -->
	<target name="init">
		<!--depends="install-ivy, resolve"-->
		<echo message="Init has been called" />
		<mkdir dir="${build.dir}" />
		<echo message="${build.dir} has been created" />
	</target>
	<target name="clean">
		<echo message="Clean has been called" />
		<delete dir="${build.dir}" />
		<echo message="${build.dir} has been deleted" />
		<delete>
			<fileset dir="." includes="**/*.dot" />
		</delete>
		<delete>
			<fileset dir="." includes="**/*.pdf" />
		</delete>
		<delete>
			<fileset dir="." includes="**/*.csv" />
		</delete>
		<echo message=".dot .pdf .csv output files has been deleted" />
	</target>
	<target name="compile" depends="init">
		<echo message="Compile target has been called" />
		<javac srcdir="${src.dir}" destdir="${build.dir}" includeAntRuntime="false">
		</javac>
		<copy todir="${build.dir}" overwrite="true">
			<fileset dir="${src.dir}">
				<include name="*.xml" />
			</fileset>
		</copy>
	</target>
	<target name="run">
		<echo message="Running project's default class (Test)" />
		<java classname="test.Test" classpath="${build.dir}" fork="true" />
	</target>
	<target name="start" depends="clean,compile">
		<echo message="Running project's default class (Test)" />
		<java classname="test.Test" classpath="${build.dir}" fork="true" />
	</target>
	<target name="test">
		<foreach param="calleeparam" list="0,1,2,3,4" target="callee" />
	</target>
	<target name="callee">
		<echo message="${calleeparam}" />
		<java classname="test.MyTest" classpath="${build.dir}" fork="true" />
	</target>
</project>
